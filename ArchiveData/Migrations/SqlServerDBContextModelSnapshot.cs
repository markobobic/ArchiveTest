// <auto-generated />
using System;
using ArchiveData.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArchiveData.Migrations
{
    [DbContext(typeof(SqlServerDBContext))]
    partial class SqlServerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArchiveData.Model.ArchivedInputNotification", b =>
                {
                    b.Property<string>("EventId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("AcknowledgmentTimeStampUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClientId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("EventDefinitionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EventTargetId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("SourceEventTimeStampUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("EventId");

                    b.HasIndex("EventDefinitionId");

                    b.ToTable("ArchivedInputNotifications");
                });

            modelBuilder.Entity("ArchiveData.Model.InputNotificationEventDefinitionEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InputNotificationEventDefinitionEntities");
                });

            modelBuilder.Entity("ArchiveData.Model.InputNotificationEventEntity", b =>
                {
                    b.Property<string>("EventId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("AcknowledgmentTimeStampUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClientId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("EventDefinitionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EventTargetId")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateTime>("SourceEventTimeStampUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("EventId");

                    b.HasIndex("EventDefinitionId");

                    b.HasIndex(new[] { "SourceEventTimeStampUtc" }, "IX_SourceEventTimeStampUTC");

                    b.ToTable("InputNotificationEventEntities");
                });

            modelBuilder.Entity("ArchiveData.Model.ArchivedInputNotification", b =>
                {
                    b.HasOne("ArchiveData.Model.InputNotificationEventDefinitionEntity", "EventDefinition")
                        .WithMany()
                        .HasForeignKey("EventDefinitionId");

                    b.Navigation("EventDefinition");
                });

            modelBuilder.Entity("ArchiveData.Model.InputNotificationEventEntity", b =>
                {
                    b.HasOne("ArchiveData.Model.InputNotificationEventDefinitionEntity", "EventDefinition")
                        .WithMany()
                        .HasForeignKey("EventDefinitionId");

                    b.Navigation("EventDefinition");
                });
#pragma warning restore 612, 618
        }
    }
}
